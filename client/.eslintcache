[{"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\index.js":"1","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\App.js":"2","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\components\\NavBar.js":"4","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Home.jsx":"5","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Signup.jsx":"6","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Profile.jsx":"7","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\index.js":"8","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Signin.jsx":"9","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\UploadPost.jsx":"10","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\services\\authService.js":"11","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\services\\postService.js":"12","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\context\\AuthContext.js":"13"},{"size":438,"mtime":1608656915780,"results":"14","hashOfConfig":"15"},{"size":1021,"mtime":1608657843144,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607682113022,"results":"17","hashOfConfig":"15"},{"size":2182,"mtime":1608652328484,"results":"18","hashOfConfig":"15"},{"size":3607,"mtime":1608894877782,"results":"19","hashOfConfig":"15"},{"size":2106,"mtime":1608263085184,"results":"20","hashOfConfig":"15"},{"size":1545,"mtime":1608657898534,"results":"21","hashOfConfig":"15"},{"size":249,"mtime":1608185369273,"results":"22","hashOfConfig":"15"},{"size":1985,"mtime":1608565561752,"results":"23","hashOfConfig":"15"},{"size":2026,"mtime":1608529280675,"results":"24","hashOfConfig":"15"},{"size":1210,"mtime":1608569763491,"results":"25","hashOfConfig":"15"},{"size":2423,"mtime":1608880225281,"results":"26","hashOfConfig":"15"},{"size":1040,"mtime":1608658736844,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"bgknoz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\index.js",[],["59","60"],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\App.js",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\reportWebVitals.js",[],["61","62"],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Home.jsx",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Signup.jsx",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Profile.jsx",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\index.js",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\Signin.jsx",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\screens\\UploadPost.jsx",[],"C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\services\\authService.js",["63"],"export default {\r\n    signUp: async user => {\r\n        return await fetch('/signup', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err))\r\n    },\r\n    signIn: async user => {\r\n        return await fetch('/signin', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n    isAuthenticated: async () => {\r\n        return await fetch('/authenticated')\r\n            .then(res => {\r\n                if (res.status !== 401)\r\n                    return res.json().then(data => data);\r\n                else\r\n                    return {isAuthenticated: false, user: {name: \"\", email: \"\"}};\r\n            })\r\n    },\r\n    logout: async () => {\r\n        return await fetch('/logout')\r\n    }\r\n};\r\n","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\services\\postService.js",["64"],"export default {\r\n    uploadImage: async image => {\r\n        const photoData = new FormData();\r\n        photoData.append('file', image);\r\n        photoData.append('upload_preset', 'Insta-Clone');\r\n        photoData.append('cloud_name', 'junaidsikander');\r\n        return await fetch('https://api.cloudinary.com/v1_1/junaidsikander/image/upload', {\r\n            method: 'POST',\r\n            body: photoData\r\n        }).then(res => res.json())\r\n            .then(data => data.url)\r\n            .catch(err => console.log(err))\r\n    },\r\n    uploadPost: async post => {\r\n        return await fetch('/posts/create_post', {\r\n            method: 'POST',\r\n            body: JSON.stringify(post),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err))\r\n    },\r\n    getAllPost: async () => {\r\n        return await fetch('/posts/get_all_posts')\r\n            .then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err))\r\n    },\r\n    myPost: async () => {\r\n        return await fetch('/posts/my_posts')\r\n            .then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err))\r\n    },\r\n    likePost: async id => {\r\n        return await fetch('/posts/like', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({postId: id}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err));\r\n    },\r\n    unlikePost: async id => {\r\n        return await fetch('/posts/unlike', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({postId: id}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err));\r\n    },\r\n    comment: async (text, postId) => {\r\n        return await fetch('/posts/comment', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({text, postId}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n            .catch(err => console.log(err))\r\n    }\r\n};\r\n","C:\\Users\\Junii\\Documents\\Workspace\\Insta-clone\\client\\src\\context\\AuthContext.js",["65"],"import React, {createContext, useEffect, useState} from 'react';\r\nimport authService from \"../services/authService\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({children}) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        authService.isAuthenticated()\r\n            .then(data => {\r\n                setUser(data.user);\r\n                setIsAuthenticated(data.isAuthenticated);\r\n                setIsLoaded(true);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {!isLoaded ?\r\n                <div className=\"progress\">\r\n                    <div className=\"indeterminate\"></div>\r\n                </div>\r\n                :\r\n                <AuthContext.Provider value={{user, setUser, isAuthenticated, setIsAuthenticated}}>\r\n                    {children}\r\n                </AuthContext.Provider>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":33,"endColumn":3},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":70,"endColumn":3},{"ruleId":"72","severity":1,"message":"75","line":6,"column":1,"nodeType":"74","endLine":33,"endColumn":2},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]